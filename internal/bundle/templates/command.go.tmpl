package {{ .Module }}

import (
	"{{ .AppName }}/internal/data"
	"log"
	"os"
	"path/filepath"

	"github.com/kluctl/go-embed-python/embed_util"
	"github.com/kluctl/go-embed-python/python"
	"github.com/spf13/cobra"
)

var {{ .CmdVarName }} = &cobra.Command{
	Use:                "{{ .CmdUse }}",
	DisableFlagParsing: true,
	Run: func(cmd *cobra.Command, args []string) {
		tmpDir := os.TempDir()

		ep, err := python.NewEmbeddedPythonWithTmpDir(filepath.Join(tmpDir, "{{ .CmdUse }}"), true)
		if err != nil {
			panic(err)
		}

		requirements, err := embed_util.NewEmbeddedFilesWithTmpDir(data.Data, tmpDir+"{{ .CmdUse }}-libs", true)
		if err != nil {
			panic(err)
		}

		ep.AddPythonPath(requirements.GetExtractedPath())
		pyArgs := []string{"-c", "{{ .Cmd }}"}
		pyArgs = append(pyArgs, args...)
		pyCmd, err := ep.PythonCmd(pyArgs...)
		if err != nil {
			log.Fatalf("failed to create python command: %v", err)
		}
		pyCmd.Stdout = os.Stdout
		pyCmd.Stderr = os.Stderr
		err = pyCmd.Run()
		if err != nil {
			log.Fatalf("failed to run python command: %v", err)
		}
	},
}
